{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/liangchenzhou/Documents/test-project/v2-app-utility/components/tfn/tfn.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { CustomBadge } from '../customBadge/customBadge';\nimport { getTFN } from '../../client/api/tfn';\nimport { Btn } from '../button/button';\nexport default class TFN extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      containerType: '',\n      tfns: [],\n      generateEventData: {\n        type: 'primary',\n        text: 'Generating',\n        isLoading: false\n      }\n    };\n    this.fetchTFN = this.fetchTFN.bind(this);\n    this.handleGenerateClick = this.handleGenerateClick.bind(this);\n  }\n\n  fetchTFN(btnState) {\n    return getTFN().then(data => {\n      console.log(data.tfn);\n      console.log(this.state.tfns);\n      this.setState(prevState => {\n        return {\n          tfns: [...this.state.tfns, data.tfn],\n          generateEventData: _objectSpread(_objectSpread({}, prevState.generateEventData), {}, {\n            isLoading: btnState.isLoading,\n            text: btnState.text\n          })\n        };\n      });\n    });\n  }\n\n  handleGenerateClick(e, btnState) {\n    this.fetchTFN({\n      isLoading: false,\n      text: 'Generate'\n    });\n    this.setState(prevState => {\n      return {\n        generateEventData: _objectSpread(_objectSpread({}, prevState.generateEventData), {}, {\n          isLoading: btnState.isLoading,\n          text: btnState.text\n        })\n      };\n    });\n  }\n\n  render() {\n    const components = this.state.tfns.map((tfn, index) => /*#__PURE__*/_jsxDEV(CustomBadge, {\n      text: tfn\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TFN Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Btn, {\n        handleBtnClick: this.handleGenerateClick,\n        data: this.state.generateEventData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"c-flex\",\n        children: components\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/liangchenzhou/Documents/test-project/v2-app-utility/components/tfn/tfn.js"],"names":["React","CustomBadge","getTFN","Btn","TFN","Component","constructor","props","state","containerType","tfns","generateEventData","type","text","isLoading","fetchTFN","bind","handleGenerateClick","btnState","then","data","console","log","tfn","setState","prevState","e","render","components","map","index"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,GAAT,QAAoB,kBAApB;AAEA,eAAe,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,EADJ;AAEXC,MAAAA,IAAI,EAAE,EAFK;AAGXC,MAAAA,iBAAiB,EAAE;AACjBC,QAAAA,IAAI,EAAE,SADW;AAEjBC,QAAAA,IAAI,EAAE,YAFW;AAGjBC,QAAAA,SAAS,EAAE;AAHM;AAHR,KAAb;AASA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBD,IAAzB,CAA8B,IAA9B,CAA3B;AACD;;AAEDD,EAAAA,QAAQ,CAACG,QAAD,EAAW;AACjB,WAAOhB,MAAM,GAAGiB,IAAT,CAAeC,IAAD,IAAU;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,GAAjB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWE,IAAvB;AACA,WAAKc,QAAL,CAAeC,SAAD,IAAe;AAC3B,eAAO;AACLf,UAAAA,IAAI,EAAE,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,EAAqBU,IAAI,CAACG,GAA1B,CADD;AAELZ,UAAAA,iBAAiB,kCACZc,SAAS,CAACd,iBADE;AAEfG,YAAAA,SAAS,EAAEI,QAAQ,CAACJ,SAFL;AAGfD,YAAAA,IAAI,EAAEK,QAAQ,CAACL;AAHA;AAFZ,SAAP;AAQD,OATD;AAUD,KAbM,CAAP;AAcD;;AAEDI,EAAAA,mBAAmB,CAACS,CAAD,EAAIR,QAAJ,EAAc;AAC/B,SAAKH,QAAL,CAAc;AAAED,MAAAA,SAAS,EAAE,KAAb;AAAoBD,MAAAA,IAAI,EAAE;AAA1B,KAAd;AACA,SAAKW,QAAL,CAAeC,SAAD,IAAe;AAC3B,aAAO;AACLd,QAAAA,iBAAiB,kCACZc,SAAS,CAACd,iBADE;AAEfG,UAAAA,SAAS,EAAEI,QAAQ,CAACJ,SAFL;AAGfD,UAAAA,IAAI,EAAEK,QAAQ,CAACL;AAHA;AADZ,OAAP;AAOD,KARD;AASD;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAMC,UAAU,GAAG,KAAKpB,KAAL,CAAWE,IAAX,CAAgBmB,GAAhB,CAAoB,CAACN,GAAD,EAAMO,KAAN,kBACrC,QAAC,WAAD;AAAyB,MAAA,IAAI,EAAEP;AAA/B,OAAkBO,KAAlB;AAAA;AAAA;AAAA;AAAA,YADiB,CAAnB;AAIA,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AACE,QAAA,cAAc,EAAE,KAAKb,mBADvB;AAEE,QAAA,IAAI,EAAE,KAAKT,KAAL,CAAWG;AAFnB;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,kBAAyBiB;AAAzB;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA9D8C","sourcesContent":["import React from 'react';\n\nimport { CustomBadge } from '../customBadge/customBadge';\n\nimport { getTFN } from '../../client/api/tfn';\nimport { Btn } from '../button/button';\n\nexport default class TFN extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      containerType: '',\n      tfns: [],\n      generateEventData: {\n        type: 'primary',\n        text: 'Generating',\n        isLoading: false,\n      },\n    };\n    this.fetchTFN = this.fetchTFN.bind(this);\n    this.handleGenerateClick = this.handleGenerateClick.bind(this);\n  }\n\n  fetchTFN(btnState) {\n    return getTFN().then((data) => {\n      console.log(data.tfn);\n      console.log(this.state.tfns);\n      this.setState((prevState) => {\n        return {\n          tfns: [...this.state.tfns, data.tfn],\n          generateEventData: {\n            ...prevState.generateEventData,\n            isLoading: btnState.isLoading,\n            text: btnState.text,\n          },\n        };\n      });\n    });\n  }\n\n  handleGenerateClick(e, btnState) {\n    this.fetchTFN({ isLoading: false, text: 'Generate' });\n    this.setState((prevState) => {\n      return {\n        generateEventData: {\n          ...prevState.generateEventData,\n          isLoading: btnState.isLoading,\n          text: btnState.text,\n        },\n      };\n    });\n  }\n\n  render() {\n    const components = this.state.tfns.map((tfn, index) => (\n      <CustomBadge key={index} text={tfn} />\n    ));\n\n    return (\n      <React.Fragment>\n        <h1>TFN Generator</h1>\n        <Btn\n          handleBtnClick={this.handleGenerateClick}\n          data={this.state.generateEventData}\n        />\n        {/* <button onClick={this.fetchTFN}>Generate</button> */}\n        <div className=\"c-flex\">{components}</div>\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
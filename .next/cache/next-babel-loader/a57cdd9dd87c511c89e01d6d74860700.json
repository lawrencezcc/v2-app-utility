{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/liangchenzhou/Documents/test-project/v2-app-utility/components/tfn/tfn.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { CustomBadge } from '../customBadge/customBadge';\nimport { getTFN } from '../../client/api/tfn';\nimport { Btn } from '../button/button';\n\nvar TFN = /*#__PURE__*/function (_React$Component) {\n  _inherits(TFN, _React$Component);\n\n  var _super = _createSuper(TFN);\n\n  function TFN(props) {\n    var _this;\n\n    _classCallCheck(this, TFN);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      containerType: '',\n      tfns: [],\n      generateEventData: {\n        type: 'primary',\n        text: 'Generate',\n        isLoading: false\n      }\n    };\n    _this.fetchTFN = _this.fetchTFN.bind(_assertThisInitialized(_this));\n    _this.handleGenerateClick = _this.handleGenerateClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TFN, [{\n    key: \"fetchTFN\",\n    value: function fetchTFN(btnState) {\n      var _this2 = this;\n\n      return getTFN().then(function (data) {\n        _this2.setState(function (prevState) {\n          return {\n            tfns: [].concat(_toConsumableArray(_this2.state.tfns), [data.tfn]),\n            generateEventData: _objectSpread(_objectSpread({}, prevState.generateEventData), {}, {\n              isLoading: btnState.isLoading,\n              text: btnState.text\n            })\n          };\n        });\n      });\n    }\n  }, {\n    key: \"handleGenerateClick\",\n    value: function handleGenerateClick(e, btnState) {\n      this.fetchTFN({\n        isLoading: false,\n        text: 'Generate'\n      });\n      this.setState(function (prevState) {\n        return {\n          generateEventData: _objectSpread(_objectSpread({}, prevState.generateEventData), {}, {\n            isLoading: btnState.isLoading,\n            text: btnState.text\n          })\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var components = this.state.tfns.map(function (tfn, index) {\n        return /*#__PURE__*/_jsxDEV(CustomBadge, {\n          text: tfn\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, _this3);\n      });\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"TFN Generator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Btn, {\n          handleBtnClick: this.handleGenerateClick,\n          data: this.state.generateEventData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"c-flex\",\n          children: components\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return TFN;\n}(React.Component);\n\nexport { TFN as default };","map":{"version":3,"sources":["/Users/liangchenzhou/Documents/test-project/v2-app-utility/components/tfn/tfn.js"],"names":["React","CustomBadge","getTFN","Btn","TFN","props","state","containerType","tfns","generateEventData","type","text","isLoading","fetchTFN","bind","handleGenerateClick","btnState","then","data","setState","prevState","tfn","e","components","map","index","Component"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,GAAT,QAAoB,kBAApB;;IAEqBC,G;;;;;AACnB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,EADJ;AAEXC,MAAAA,IAAI,EAAE,EAFK;AAGXC,MAAAA,iBAAiB,EAAE;AACjBC,QAAAA,IAAI,EAAE,SADW;AAEjBC,QAAAA,IAAI,EAAE,UAFW;AAGjBC,QAAAA,SAAS,EAAE;AAHM;AAHR,KAAb;AASA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB;AACA,UAAKC,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBD,IAAzB,+BAA3B;AAZiB;AAalB;;;;6BAEQE,Q,EAAU;AAAA;;AACjB,aAAOd,MAAM,GAAGe,IAAT,CAAc,UAACC,IAAD,EAAU;AAC7B,QAAA,MAAI,CAACC,QAAL,CAAc,UAACC,SAAD,EAAe;AAC3B,iBAAO;AACLZ,YAAAA,IAAI,+BAAM,MAAI,CAACF,KAAL,CAAWE,IAAjB,IAAuBU,IAAI,CAACG,GAA5B,EADC;AAELZ,YAAAA,iBAAiB,kCACZW,SAAS,CAACX,iBADE;AAEfG,cAAAA,SAAS,EAAEI,QAAQ,CAACJ,SAFL;AAGfD,cAAAA,IAAI,EAAEK,QAAQ,CAACL;AAHA;AAFZ,WAAP;AAQD,SATD;AAUD,OAXM,CAAP;AAYD;;;wCAEmBW,C,EAAGN,Q,EAAU;AAC/B,WAAKH,QAAL,CAAc;AAAED,QAAAA,SAAS,EAAE,KAAb;AAAoBD,QAAAA,IAAI,EAAE;AAA1B,OAAd;AACA,WAAKQ,QAAL,CAAc,UAACC,SAAD,EAAe;AAC3B,eAAO;AACLX,UAAAA,iBAAiB,kCACZW,SAAS,CAACX,iBADE;AAEfG,YAAAA,SAAS,EAAEI,QAAQ,CAACJ,SAFL;AAGfD,YAAAA,IAAI,EAAEK,QAAQ,CAACL;AAHA;AADZ,SAAP;AAOD,OARD;AASD;;;6BAEQ;AAAA;;AACP,UAAMY,UAAU,GAAG,KAAKjB,KAAL,CAAWE,IAAX,CAAgBgB,GAAhB,CAAoB,UAACH,GAAD,EAAMI,KAAN;AAAA,4BACrC,QAAC,WAAD;AAAyB,UAAA,IAAI,EAAEJ;AAA/B,WAAkBI,KAAlB;AAAA;AAAA;AAAA;AAAA,kBADqC;AAAA,OAApB,CAAnB;AAIA,0BACE,QAAC,KAAD,CAAO,QAAP;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,GAAD;AACE,UAAA,cAAc,EAAE,KAAKV,mBADvB;AAEE,UAAA,IAAI,EAAE,KAAKT,KAAL,CAAWG;AAFnB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,oBAAyBc;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAWD;;;;EA5D8BvB,KAAK,CAAC0B,S;;SAAlBtB,G","sourcesContent":["import React from 'react';\n\nimport { CustomBadge } from '../customBadge/customBadge';\n\nimport { getTFN } from '../../client/api/tfn';\nimport { Btn } from '../button/button';\n\nexport default class TFN extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      containerType: '',\n      tfns: [],\n      generateEventData: {\n        type: 'primary',\n        text: 'Generate',\n        isLoading: false,\n      },\n    };\n    this.fetchTFN = this.fetchTFN.bind(this);\n    this.handleGenerateClick = this.handleGenerateClick.bind(this);\n  }\n\n  fetchTFN(btnState) {\n    return getTFN().then((data) => {\n      this.setState((prevState) => {\n        return {\n          tfns: [...this.state.tfns, data.tfn],\n          generateEventData: {\n            ...prevState.generateEventData,\n            isLoading: btnState.isLoading,\n            text: btnState.text,\n          },\n        };\n      });\n    });\n  }\n\n  handleGenerateClick(e, btnState) {\n    this.fetchTFN({ isLoading: false, text: 'Generate' });\n    this.setState((prevState) => {\n      return {\n        generateEventData: {\n          ...prevState.generateEventData,\n          isLoading: btnState.isLoading,\n          text: btnState.text,\n        },\n      };\n    });\n  }\n\n  render() {\n    const components = this.state.tfns.map((tfn, index) => (\n      <CustomBadge key={index} text={tfn} />\n    ));\n\n    return (\n      <React.Fragment>\n        <h1>TFN Generator</h1>\n        <Btn\n          handleBtnClick={this.handleGenerateClick}\n          data={this.state.generateEventData}\n        />\n        {/* <button onClick={this.fetchTFN}>Generate</button> */}\n        <div className=\"c-flex\">{components}</div>\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}